<div id="page-container">

  <div class="resultsPageTopComponent">
    <h5 style="text-align: center; margin-top: 5px;">
      Staphlyococcus Aureus <br>
      </h5>

    <h1 style="text-align: center; margin-top: -10px;">
      Sample: <% sample_metadata.forEach(function (result_sample_metadata) { %>
         <%= result_sample_metadata.sample_id %> <% }) %></h1>
    <hr style="width: 55%; margin-top: -2px"></hr>
    <h4 style="text-align: center"> Summary </h4>
		<p class="summaryInfo">
		  <% mlst_mlst.forEach(function (result_mlst_mlst) { %>
		  <b>Sequence Type:</b> <%= result_mlst_mlst.st %>
		  <% }) %>
		  <br>
		  <% sample_metadata.forEach(function (result_sample_metadata) { %>
		  <b>Location:</b> <%= result_sample_metadata.metadata.country %>
		  <br>
		  <b>Strain:</b> <%= result_sample_metadata.metadata.strain %>
		  <br>
		  <b>Host:</b> <%= result_sample_metadata.metadata.host %>
		  <br>
		  <b>Isolation Source:</b> <%= result_sample_metadata.metadata.isolation_source %>
		  <br>
		  <b>Scientific Name:</b> <%= result_sample_metadata.metadata.scientific_name %>
		  <br>
		  <% }) %>
		  <% tag_tag.forEach(function (result_tag_tag) { %>
		  <b>Comment:</b> <%= result_tag_tag.comment %>
		  <% }) %>
		</p>
    <hr style="width: 55%">

    </hr>
    <h3 style="text-align: center"> Sample Information </h3>
  </div>

  <div id="resultsPageTableComponent">

    <div class="tab">
      <!--need to change the titles for these once finalised-->
      <button class="tablinks active" onclick="resultsTabs(event, 'Tags')" title="">Tags</button>
      <button class="tablinks" onclick="resultsTabs(event, 'Metadata')" title="">Metadata</button>
      <button class="tablinks" onclick="resultsTabs(event, 'Sequencing')" title="">Sequencing Metrics</button>
      <button class="tablinks" onclick="resultsTabs(event, 'Assembly')" title="">Assembly Metrics</button>
      <button class="tablinks" onclick="resultsTabs(event, 'MLST')" title="">MLST</button>
      <button class="tablinks" onclick="resultsTabs(event, 'Sccmec_Primers')" title="">SCCmec Primer Hits</button>
      <button class="tablinks" onclick="resultsTabs(event, 'Sccmec_Subtypes')" title="">SCCmec Subtype Hits</button>
      <button class="tablinks" onclick="resultsTabs(event, 'Sccmec_Proteins')" title="">SCCmec Protein Hits</button>
    </div>
	
    <div id="Tags" class="tabcontent" style="display: block;">
      <table class="adjustedTable">
        <% tag_tag.forEach(function (result_tag_tag) { %>
        <tr>
          <td >Tag:</td>
          <td >
            <%= result_tag_tag.tag %>
          </td>
        </tr>
        <tr>
          <td >Comment:</td>
          <td >
            <%= result_tag_tag.comment %>
          </td>
        </tr>
        <% }) %>
      </table>
    </div>

    <div id="Metadata" class="tabcontent">
      <% include ../snippets/resultMetadata %>
    </div>

    <div id="Sequencing" class="tabcontent">
      <% include ../snippets/resultSequence %>
    </div>

    <div id="Assembly" class="tabcontent">
      <% include ../snippets/resultAssembly %>
    </div>

    <div id="MLST" class="tabcontent">
      <table style="width: 100%;">
        <% mlst_mlst.forEach(function (result_mlst_mlst) { %>
        <tr>
          <td >st:</td>
          <td >
            <%= result_mlst_mlst.st %>
          </td>
        </tr>
        <tr>
          <td >ariba:</td>
          <td >
            <%= result_mlst_mlst.ariba %>
          </td>
        </tr>
        <tr>
          <td >mentalist:</td>
          <td >
            <%= result_mlst_mlst.mentalist %>
          </td>
        </tr>
        <tr>
          <td >BLAST:</td>
          <td >
            <%= result_mlst_mlst.blast %>
          </td>
        </tr>
        <% }) %>
      </table>
    </div>

    <div id="Sccmec_Primers" class="tabcontent">
      <% include ../snippets/resultSccmecPrimers %>
    </div>

    <div id="Sccmec_Subtypes" class="tabcontent">
      <% include ../snippets/resultSccmecSubtypes %>
    </div>

    <div id="Sccmec_Proteins" class="tabcontent">
      <% include ../snippets/resultSccmecProteins.ejs %>
    </div>
  </div>

  <div id="resultsPageGraphComponents">
    <div id="resultsPageGraphComponent1">
      <h6 id="displayDescription">Functional network of related genomes and genomic interaction</h6>
    </div>
    <!-- close resultsPageGraphComponent1 -->

    <div id="resultsPageGraphComponent2">
		<div id="interactiveGraph">
			<button type="button" id="centerGraph" onclick="centerGraph()" title="Center graph" class="btn btn-outline-dark btn-sm">
			  <i class="fas fa-expand" style="font-size:20px; padding-left: 20px; padding-right: 20px;"></i>
			</button>
			<a href="#saveableGraphImage" id="downloadGraph" onclick="downloadGraph()" title="Create .png file of current graph" class="btn btn-outline-dark btn-sm">
			  <i class="far fa-file-image" style="font-size:20px; padding-left: 20px; padding-right: 20px;"></i>
			</a>
			<button type="button" id="favouriteSample" onclick="favouriteSample()"  title="Favourite sample" class="btn btn-outline-dark btn-sm">
			  <i class="far fa-star" style="font-size:20px; padding-left: 20px; padding-right: 20px;"></i>
			</button>
			<button type="button" id="zoomInGraph" onclick="zoomInGraph()" title="Zoom in on graph" class="btn btn-outline-dark btn-sm">
			  <i class="fa fa-search-plus" style="font-size:20px; padding-left: 20px; padding-right: 20px;"></i>
			</button>
			<button type="button" id="zoomOutGraph" onclick="zoomOutGraph()" title="Zoom out on graph" class="btn btn-outline-dark btn-sm">
			  <i class="fa fa-search-minus" style="font-size:20px; padding-left: 20px; padding-right: 20px;"></i>
			</button>
			<a href="#interactiveGraph" id="expandGraph" onclick="expandGraph()" title="Make graph full screen" class="btn btn-outline-dark btn-sm">
			  <i class="fas fa-long-arrow-alt-up" style="font-size:20px; padding-left: 20px; padding-right: 20px;"></i>
			</a>
		</div>
		<div id="cyLegend"> 
			<p id="cyLegendTitle"><b> Legend</b> </p>
			<p id="cyLegendDivider"> | </p>
			<div id="" class="legendColorSquare" style="background-color: red;"></div>
				<p id="cyLegendText"> Same Location	 </p>
				<div class="cyLegendSpacer"></div>
				
			<div id="" class="legendColorSquare" style="background-color: blue;"></div>
				<p id="cyLegendText"> Same Host 	</p>
				<div class="cyLegendSpacer"></div>

			<div id="" class="legendColorSquare" style="background-color: green;"></div>
				<p id="cyLegendText"> Same Sequence Type	 </p>
				<div class="cyLegendSpacer"></div>

			<div id="" class="legendColorSquare" style="background-color: orange;"></div>	
				<p id="cyLegendText"> Same Isolation Source	 </p>

		</div>
		<div id="cy"></div>
    </div>
    <!-- close resultsPageGraphComponent2 -->


    <div id="resultsPageGraphComponent3" style="text-align: center;">
      <div class="weightedDistanceSliders">
        <p>Weighted distance 1</p>
        <input type="range" min="1" max="100" value="50" class="slider" id="myRange" style="width: 40%; "></input>

      </div>

      <div class="weightedDistanceSliders">

        <p>Weighted distance 2</p>
        <input type="range" min="1" max="100" value="50" class="slider" id="myRange" style="width: 40%; "></input>

      </div>

    </div>
    <!-- close resultsPageGraphComponent3 -->
  </div>
  <!-- close resultsPageResultComponents -->

  <div id="imageTitleDiv" style="width: 100%; font-size: 20px; text-align: center; margin-bottom: 20px; margin-top: 20px;"></div>
  <img id="saveableGraphImage"></img>

  <script>
    <!-- sampleTab buttons functionality -->
    function resultsTabs(evt, tabName) {

    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
	
	
    for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
          }
          tablinks = document.getElementsByClassName("tablinks");
          for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
          }
          document.getElementById(tabName).style.display = "block";
          evt.currentTarget.className += " active";
      }

        <!-- cytoscape div -->

    var sampleIdentity = <%- JSON.stringify(sample_ID) %>;
    console.log(sampleIdentity);
      var cy = cytoscape({
      container: document.getElementById('cy'),
      elements: [
      // nodes
      { data: { id: sampleIdentity } }
      ],
      style: [{
        selector: 'node', style: {'background-color': '#468e94', label: 'data(id)'},
      }, {
         selector: 'edge', style: {'curve-style': 'bezier', 'control-point-step-size': 10}
          }
      ],
      });
      let collection = cy.collection();
      let same_sq = <%- JSON.stringify(same_sequences) %>;
      let same_loc = <%- JSON.stringify(same_locations) %>;
      let same_ho = <%- JSON.stringify(same_hosts) %>;
      let same_iso = <%- JSON.stringify(same_isolations) %>;
      same_sq.forEach(function(same_sequence) {
          let same_sequence_sample_id = same_sequence.sample_id;
          if (same_sequence_sample_id != sampleIdentity){
              cy.add({
                  data: {id: same_sequence_sample_id, seq: same_sequence.st, loc: same_sequence.country, strain: same_sequence.strain,
                      host: same_sequence.host, iso: same_sequence.isolation_source}
              });
              collection = collection.add(cy.$id(same_sequence_sample_id));
              var source = same_sequence_sample_id;
              cy.add({
                  data: {
                      id: 'edge' + source,
                      source: source,
                      target: (sampleIdentity),
                  },
                  style: {'line-color': 'green'}
              });
              collection = collection.add(cy.$id('edge' + same_sequence_sample_id));
          }
      });
      same_loc.forEach(function(same_location) {
          let same_location_sample_id = same_location.sample_id;
          if (same_location_sample_id != sampleIdentity){
              if(cy.$id(same_location_sample_id).empty()){
                  cy.add({
                      data: {id: same_location_sample_id, seq: same_location.st, loc: same_location.country, strain: same_location.strain,
                          host: same_location.host, iso: same_location.isolation_source}
                  });
                  collection = collection.add(cy.$id(same_location_sample_id));
              }
              var source = same_location_sample_id;
              cy.add({
                  data: {
                      id: 'edge2' + source,
                      source: source,
                      target: (sampleIdentity),
                  },
                  style: {'line-color': 'red'}
              });
              collection = collection.add(cy.$id('edge2' + same_location_sample_id));
          }
      });
      same_ho.forEach(function(same_host) {
        let same_host_sample_id = same_host.sample_id;
        if (same_host_sample_id != sampleIdentity){
            if(cy.$id(same_host_sample_id).empty()){
                cy.add({
                    data: {id: same_host_sample_id, seq: same_host.st, loc: same_host.country, strain: same_host.strain,
                        host: same_host.host, iso: same_host.isolation_source}
                });
                collection = collection.add(cy.$id(same_host_sample_id));
            }
            var source = same_host_sample_id;
            cy.add({
                data: {
                    id: 'edge3' + source,
                    source: source,
                    target: (sampleIdentity),
                },
                style: {'line-color': 'blue'}
            });
            collection = collection.add(cy.$id('edge3' + same_host_sample_id));
        }
    });
    same_iso.forEach(function(same_isolation) {
        let same_iso_sample_id = same_isolation.sample_id;
        if (same_iso_sample_id != sampleIdentity){
            if(cy.$id(same_iso_sample_id).empty()){
                cy.add({
                    data: {id: same_iso_sample_id, seq: same_isolation.st, loc: same_isolation.country, strain: same_isolation.strain,
                        host: same_isolation.host, iso: same_isolation.isolation_source}
                });
                collection = collection.add(cy.$id(same_iso_sample_id));
            }
            var source = same_iso_sample_id;
            cy.add({
                data: {
                    id: 'edge4' + source,
                    source: source,
                    target: (sampleIdentity),
                },
                style: {'line-color': 'orange'}
            });
            collection = collection.add(cy.$id('edge4' + same_iso_sample_id));
        }
    });
    collection.forEach(function(ele, i ,eles) {
        if(ele.isNode()){
            let e = ele.connectedEdges();
            if(e.length < 2){
                ele.remove();
            }
            ele.on('click', function(evt){
                let id = this.id();
                function get_sample(){
                    let form = document.createElement("form");
                    let element = document.createElement("input");
                    form.action = '/result';
                    form.method = "get";
                    element.name ="sampleSelection";
                    element.value= id;
                    form.appendChild(element);
                    document.body.appendChild(form);
                    form.submit();
                }
                popupS.confirm({
                    content: '<b>Sample: </b>' + id +'<br><b>Sequence Type: </b>' + ele.data('seq') +'<br><b>Location: </b>' + ele.data('loc') +
                        '<br><b>Strain: </b>' + ele.data('strain') +'<br><b>Host: </b>' + ele.data('host') +'<br><b>Isolation Source: </b><br>' + ele.data('iso'),
                    labelOk: 'View Sample',
                    labelCancel: 'Cancel',
                    additionalButtonCancelClass: 'popUpButtonCSS',
                    additionalButtonOkClass: 'popUpButtonCSS',
                    onSubmit: function() {
                        get_sample();
                    }
                });
            });

        }
    });

      cy.layout({
          name: 'cola'
      }).run()
            


      <!-- /// -->
      <!-- SCRIPTS FOR CYTOSCAPE GRAPH BUTTONS -->
      <!-- /// -->

      <!-- Global variables for cytoscape graph buttons -->
      var zoomAmount = 1;
      var newZoom;


      <!-- zoomInGraph functionality-->
      function zoomInGraph() {
      console.log("ZOOM IN - "+zoomAmount);
      zoomAmount = zoomAmount + 0.25;
      newZoom = zoomAmount;
      console.log("IN - "+newZoom);

      cy.zoom({level: newZoom});

      }

      <!-- zoomOutGraph functionality-->
      function zoomOutGraph() {
      console.log("ZOOM OUT - "+zoomAmount);

      zoomAmount = zoomAmount - 0.25;
      newZoom = zoomAmount;
      console.log("OUT - "+newZoom);

      cy.zoom({level: newZoom});

      }

      <!-- downloadGraph functionality-->
      function downloadGraph() {
      console.log("download graph");

	  var title = document.createElement("P");
      var t = document.createTextNode("Save image (right click to save)");
      title.appendChild(t);
      document.getElementById("imageTitleDiv").appendChild(title);
	  
	
      document.getElementById("saveableGraphImage").style.visibility="visible";
	  document.getElementById("saveableGraphImage").style.width="100%";

      var png64 = cy.png();

      document.getElementById("saveableGraphImage").src="" + png64;

      }

      <!-- expandGraph functionality-->
      function expandGraph() {
      var windowHeight = window.innerHeight;
      var screenHeight = windowHeight + 30;
      var graphHeight = windowHeight - 60;

      <!-- make right (tabular) components move above genome graph components-->
      document.getElementById("resultsPageRightComponent").style.float= "left";
      document.getElementById("resultsPageRightComponent").style.width= "100%";
      document.getElementById("resultsPageRightComponent").style.padding= "0px 0px 10px 0px";

      <!-- make genome graph div container component full width and height of screen -->
        document.getElementById("resultsPageLeftComponents").style.width= "100%";
        document.getElementById("resultsPageLeftComponents").style.height= screenHeight + "px";
        document.getElementById("resultsPageLeftComponents").style.clear= "both";
        document.getElementById("resultsPageLeftComponents").style.padding= "0px";

        <!-- specifically make genome graph component full width and height of screen -->
        document.getElementById("resultsPageLeftComponent2").style.height= screenHeight + "px";
        document.getElementById("resultsPageLeftComponent2").style.padding= "0 0 10px 0";
        document.getElementById("resultsPageLeftComponent2").style.width= "80%";


        <!-- make genome sliders to right of graph -->
        document.getElementById("resultsPageLeftComponent3").style.width= "20%";
        document.getElementById("resultsPageLeftComponent3").style.margin="70px 0 0 0";

        <!-- specifically modify cytoscape graph -->
        document.getElementById("cy").style.width= "100%";
        document.getElementById("cy").style.height= graphHeight + "px";

        <!-- specifically make sliders stack under each other on RHS of graph -->
        var elements = document.getElementsByClassName("weightedDistanceSliders");
        for (var i = 0; i < elements.length; i++) {
          elements[i].style.width="90%";
        }

        centerGraph();

        }

        <!-- center graph functionality-->

      function centerGraph() {
      zoomAmount = 1;
      newZoom = 1;

      cy.center();
      cy.reset();

      }


    </script>


