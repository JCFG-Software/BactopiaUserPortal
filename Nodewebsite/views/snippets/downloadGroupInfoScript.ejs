<script>

    /*
     * Functionality for downloading group info.
     * Lets the user save all the key information for samples
     * belonging to a group, the radar graph
     * and the bar graphs.
     *
     */

     function downloadRadarGraph(){
       let base64Image = document.getElementById("aggregatedRadarGraph").toDataURL("image/jpg");
       saveImageAs(base64Image,  `BactBook- ${<%- JSON.stringify(groupInfo.name) %>} Radar.png`);
     }

     function downloadBarGraphs(){

       let barGraphs = document.getElementsByClassName("barGraph");

       for (var i = 0; i < barGraphs.length; i++) {
         let base64Image = barGraphs[i].toDataURL("image/jpg");
         let name = barGraphs[i].id;
         saveImageAs(base64Image,  `Bactbook- ${<%- JSON.stringify(groupInfo.name) %>} ${name}.png`);
       }

     }

     function saveImageAs(base64Data, fileName) {
       let link = document.createElement("a");
       link.setAttribute("href", base64Data);
       link.setAttribute("download", fileName);
       document.body.appendChild(link); // for Firefox
       link.click();
     }


     function downloadGenomeInformation(){
       let groupSamples =  <%- JSON.stringify(samples) %>;

       let groupName = ["Name", `${<%- JSON.stringify(groupInfo.name) %>}`];
       let groupDescription = ["Description", `${<%- JSON.stringify(groupInfo.description) %>}`];
       let headers = ["Sample Id", "Species", "Host", "Source", "Location"];

       let master_information = [];
       master_information.push(groupName);
       master_information.push(groupDescription);
       master_information.push(headers);

        groupSamples.forEach(function(sample) {
          let sampleRow = [];
          sampleRow.push(sample.id);
          sampleRow.push(sample.species);
          sampleRow.push(sample.host);
          sampleRow.push(sample.source);
          sampleRow.push(sample.location);
          master_information.push(sampleRow);
        });

        let csvContent = "data:text/csv;charset=utf-8," + master_information.map(e => e.join(",")).join("\n");
        saveCsvAs(csvContent, `BactBook- ${<%- JSON.stringify(groupInfo.name) %>} Samples Key Metadata.png`);

     }

     // TODO: MOVE ALL DOWNLOADS TO ONE FILE
     function saveCsvAs(csvContent, fileName){
       let encodedUri = encodeURI(csvContent);
       let link = document.createElement("a");
       link.setAttribute("href", encodedUri);
       link.setAttribute("download", `Bactbook-Sample ${<%- JSON.stringify(groupInfo.name) %>} Metadata.csv`);
       document.body.appendChild(link); // for Firefox
       link.click();
     }


</script>
